{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Steper",
				"StepperSpeed"
			],
			[
				"sy",
				"syn2\tstatement"
			],
			[
				"l1",
				"l1_delta"
			],
			[
				"l2_",
				"l2_delta"
			],
			[
				"Ca",
				"CalibrationKey"
			],
			[
				"C",
				"CalibrationKey"
			],
			[
				"Calibration",
				"CalibrationKey"
			],
			[
				"Calib",
				"CalibrationKey"
			],
			[
				"Cali",
				"CalibStateRead"
			],
			[
				"CalibS",
				"CalibStateAdd"
			],
			[
				"Sd",
				"SdValid"
			],
			[
				"Lite",
				"LiterPerHa"
			],
			[
				"Li",
				"LiterPerHa"
			],
			[
				"M",
				"MachineWidth"
			],
			[
				"File",
				"FilaName"
			],
			[
				"Liter",
				"LiterPerHa"
			],
			[
				"P",
				"PulseDuration"
			],
			[
				"Flux",
				"FluxLed"
			],
			[
				"SpeedLE",
				"SpeedLedState"
			],
			[
				"SpeedLed",
				"SpeedLedState"
			],
			[
				"digital",
				"digitalWrite\tArduino digitalWrite"
			],
			[
				"Flu",
				"FluxLed"
			],
			[
				"Speed",
				"SpeedLed"
			],
			[
				"Pulse",
				"PulseDurationSpeed"
			],
			[
				"time",
				"timeoutFlux"
			],
			[
				"random",
				"randomSeed\tArduino randomSeed()"
			],
			[
				"_E",
				"_EMEA"
			],
			[
				"_",
				"_EEST"
			],
			[
				"pulse",
				"PulseDuration"
			],
			[
				"Pul",
				"pulseCounter"
			],
			[
				"F",
				"FluxTime"
			],
			[
				"LiterP",
				"LiterPerPulse"
			],
			[
				"Mete",
				"MetersPerPulse"
			],
			[
				"Meter",
				"MeterPP"
			],
			[
				"pul",
				"PulseTime"
			],
			[
				"print",
				"println"
			],
			[
				"pulses",
				"pulses"
			],
			[
				"mills",
				"MillisOld"
			],
			[
				"D",
				"digitalWrite"
			],
			[
				"de",
				"delay\tArduino delay()"
			],
			[
				"digita",
				"digitalWrite\tArduino digitalWrite"
			],
			[
				"set",
				"setPoint"
			],
			[
				"S",
				"SpeedCalibrateButton"
			],
			[
				"pin",
				"pinMode"
			],
			[
				"pi",
				"pinMode"
			],
			[
				"Close",
				"CloseSession"
			],
			[
				"Open",
				"OpenSession"
			],
			[
				"L",
				"LOOPState"
			],
			[
				"V",
				"VALVE_PIN2"
			],
			[
				"re",
				"ReleaseBridge"
			],
			[
				"Pu",
				"PulseTime"
			],
			[
				"flux",
				"FluxVal"
			],
			[
				"HIGH",
				"HIGHState"
			],
			[
				"prin",
				"println"
			],
			[
				"O",
				"open"
			],
			[
				"diti",
				"digitalWrite\tArduino digitalWrite"
			],
			[
				"di",
				"digitalWrite\tArduino digitalWrite"
			],
			[
				"out",
				"Out_A"
			],
			[
				"Out",
				"Out_A"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/Users/gabri/Desktop/DataBaseEsp/DataBaseEsp.ino",
			"settings":
			{
				"buffer_size": 1301,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/gabri/Desktop/esp8266_deauther-master/esp8266_deauther/esp8266_deauther.ino",
			"settings":
			{
				"buffer_size": 20146,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Program Files (x86)/Arduino/libraries/WiFi/src/WiFiUdp.cpp",
			"settings":
			{
				"buffer_size": 3842,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/gabri/AppData/Local/Arduino15/packages/esp8266/hardware/esp8266/2.3.0/libraries/ESP8266WiFi/src/WiFiUdp.h",
			"settings":
			{
				"buffer_size": 4635,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Program Files (x86)/Arduino/libraries/WiFi/src/WiFiUdp.h",
			"settings":
			{
				"buffer_size": 3316,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Program Files (x86)/Arduino/libraries/WiFi/src/utility/wifi_drv.h",
			"settings":
			{
				"buffer_size": 8501,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "board",
		"selected_items":
		[
			[
				"board",
				"Deviot: Select Board"
			],
			[
				"compile",
				"Deviot: Compile"
			],
			[
				"intall",
				"Package Control: Install Package"
			],
			[
				"ardui",
				"Set Syntax: Arduino"
			],
			[
				"pyt",
				"Set Syntax: Python"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"arduino",
				"Set Syntax: Arduino"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"c",
				"Set Syntax: C++"
			],
			[
				"java",
				"Build With: JavaC"
			],
			[
				"java ",
				"Build With: JavaC"
			]
		],
		"width": 412.0
	},
	"console":
	{
		"height": 247.0,
		"history":
		[
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"python",
			"pip",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_command(True)",
			"java",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.command_log(True)",
			"sublime.log_command(True)",
			"sublime.command_log(True)",
			"sublime.log_command(True)",
			"sublime.log_commands(False)",
			"asda",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"command: stino_build",
			"command stino_build",
			"command: stino_build",
			"stino_build",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(false)",
			"sublime.log_commands(True)",
			"build"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Program Files (x86)/Arduino/libraries/WiFi/src/utility/wifi_drv.h",
		"/C/Program Files (x86)/Arduino/libraries/WiFi/src/WiFiUdp.h",
		"/C/Users/gabri/AppData/Local/Arduino15/packages/esp8266/hardware/esp8266/2.3.0/libraries/ESP8266WiFi/src/WiFiUdp.h",
		"/C/Program Files (x86)/Arduino/libraries/WiFi/src/WiFiUdp.cpp",
		"/C/Users/gabri/AppData/Local/Arduino15/packages/esp8266/hardware/esp8266/2.3.0/tools/sdk/include/user_interface.h",
		"/D/pulvertech/pulvertech_V1/BoardAuth.h",
		"/D/pulvertech/pulvertech_V1/KalmanFilter.h",
		"/D/pulvertech/pulvertech_V1/EEPROM_ANY.h",
		"/D/pulvertech/pulvertech_V1/calculus.h",
		"/D/pulvertech/pulvertech_V1/SDcard.h",
		"/D/pulvertech/pulvertech_V1/control.h",
		"/D/pulvertech/pulvertech_V1/Flux.h",
		"/D/pulvertech/pulvertech_V1/Speed.h",
		"/D/pulvertech/pulvertech_V1/Pulvertech_V1.ino",
		"/D/pulvertech/pulvertech_V1/bkp/Pulvertech_V1.ino_",
		"/D/pulvertech/pulvertech_V1/Pulvertech_V1Ard.ino",
		"/D/pulvertech/pulvertech_V1/Pulvertech_V1_/Pulvertech_V1_/ArduinoCore/include/core/WString.h",
		"/D/pulvertech/pulvertech_V1/Pulvertech_V1_/Pulvertech_V1_/ArduinoCore/include/core/Print.h",
		"/D/pulvertech/pulvertech_V1/Pulvertech_V1_/Pulvertech_V1_/pulvertech_V1/include/libraries/Adafruit_ssd1306syp/Adafruit_ssd1306syp.h",
		"/D/pulvertech/pulvertech_V1/Pulvertech_V1_/Pulvertech_V1_/ArduinoCore/include/core/Arduino.h",
		"/D/pulvertech/pulvertech_V1/Pulvertech_V1_/Pulvertech_V1_/pulvertech_V1/include/libraries/Adafruit_ssd1306syp/Adafruit_GFX.h",
		"/C/Users/gabri/Desktop/ESP_logger_dweet/ESP_logger_dweet.ino",
		"/C/Users/gabri/Documents/Arduino/libraries/DHT_sensor_library/DHT_U.cpp",
		"/C/Users/gabri/Documents/Arduino/libraries/DHT_sensor_library/DHT_U.h",
		"/D/pulvertech/pulvertech_V1/bkp/pulvertech_V1.ino",
		"/C/Users/gabri/Desktop/AccessControlRenault/AccessControlRenault.ino",
		"/D/berabot hypercube/ESP_tcp_berabot/ESP_tcp_berabot.ino/ESP_tcp_berabot.ino.ino",
		"/C/Users/gabri/AppData/Local/Arduino15/packages.stino-settings",
		"/C/Users/gabri/Desktop/library.properties",
		"/C/Users/gabri/Documents/Arduino/libraries/rfid-master/examples/RFID-Cloner/RFID-Cloner.ino",
		"/C/Users/gabri/Desktop/motorTest/motorTest.ino",
		"/C/Users/gabri/Desktop/motorTest.ino",
		"/C/Users/gabri/Desktop/testPulseCount.ino",
		"/C/Program Files (x86)/Arduino/libraries/Stepper/examples/stepper_oneRevolution/stepper_oneRevolution.ino",
		"/C/Users/gabri/Documents/Arduino/libraries/rfid-master/examples/servo_motor/servo_motor.ino",
		"/C/Users/gabri/Documents/Arduino/libraries/rfid-master/examples/rfid_write_personal_data/rfid_write_personal_data.ino",
		"/C/Users/gabri/Documents/Arduino/libraries/rfid-master/examples/ChangeUID/ChangeUID.ino",
		"/C/Users/gabri/Documents/Arduino/libraries/rfid-master/examples/DumpInfo/DumpInfo.ino",
		"/C/Users/gabri/Desktop/python trainning/FistNeuralNEtwork.py",
		"/C/Users/gabri/Desktop/PID_implementation.h",
		"/D/pulvertech/pulvertech_V1/pulvertech_V1.ino",
		"/C/Users/gabri/Desktop/IAMDinosaur-master/GameManipulator.js",
		"/C/Users/gabri/Desktop/test.py",
		"/C/Users/gabri/Desktop/python trainning/test.py",
		"/C/Users/gabri/Desktop/IAMDinosaur-master/index.js",
		"/C/Users/gabri/Desktop/IAMDinosaur-master/Learner.js",
		"/C/Users/gabri/Desktop/IAMDinosaur-master/package.json",
		"/C/Users/gabri/Desktop/IAMDinosaur-master/README.md",
		"/C/Users/gabri/Desktop/IAMDinosaur-master/Scanner.js",
		"/C/Users/gabri/Desktop/IAMDinosaur-master/UI.js",
		"/C/Users/gabri/Desktop/IAMDinosaur-master/LICENSE",
		"/C/Users/gabri/Desktop/IAMDinosaur-master/.gitignore",
		"/C/Users/gabri/Desktop/Apollo-11-master/.editorconfig",
		"/C/Users/gabri/Desktop/Apollo-11-master/Comanche055/AGC_BLOCK_TWO_SELF-CHECK.agc",
		"/C/Users/gabri/Desktop/Apollo-11-master/README.pt_br.md",
		"/C/Users/gabri/Desktop/Apollo-11-master/README.zh_cn.md",
		"/D/Apollo-11-master/CM_BODY_ATTITUDE.s",
		"/D/Apollo-11-master/FP8.s",
		"/D/Apollo-11-master/README.md",
		"/C/Users/gabri/Desktop/Apollo-11-master/README.zh_tw.md",
		"/D/Apollo-11-master/LUNAR_LANDING_GUIDANCE_EQUATIONS.s",
		"/C/Users/gabri/source/repos/WindowsFormsApp1/WindowsFormsApp1/bin/Release/PulvertechV1.exe.config",
		"/C/Users/gabri/source/repos/WindowsFormsApp1/WindowsFormsApp1/bin/Release/PulvertechV1.exe",
		"/D/stl/test.Gcode",
		"/D/stl/2.8_Hex_Wrench_Handle.stl",
		"/C/Users/gabri/Desktop/Config.pv1",
		"/D/pulvertech/pulvertech_V1/pulvertech_V1_AVR_UNO_atmega328p.hex",
		"/C/Users/gabri/Desktop/Telemetry-Viewer-master/TimeDomainChart.java",
		"/C/Users/gabri/Desktop/Telemetry-Viewer-master/Tester.java",
		"/C/Users/gabri/Desktop/fullTelemetryPulvertech.txt",
		"/C/Users/gabri/Desktop/PulvertechTelemetry.txt",
		"/C/Users/gabri/Desktop/FL_insurance_sample.csv",
		"/D/pulvertech/pulvertech_V1/control2.txt",
		"/C/Users/gabri/Desktop/Telemetry-Viewer-master/ChartListener.java",
		"/C/Users/gabri/Desktop/Telemetry-Viewer-master/GridChangedListener.java",
		"/C/Users/gabri/Desktop/COM3 - Serial Monitor.txt",
		"/D/pulvertech/pulvertech_V1/EEPROM.h",
		"/C/Program Files (x86)/Arduino/hardware/arduino/avr/cores/arduino/Arduino.h",
		"/D/pulvertech/pulvertech_V1/KalmanFilter.cpp",
		"/C/Users/gabri/Desktop/pulseGenerator/pulseGenerator.ino",
		"/C/Users/gabri/Desktop/TestInter/TestInter.ino",
		"/C/Users/gabri/Desktop/FlowMEter.ino",
		"/C/Program Files (x86)/Arduino/hardware/arduino/avr/cores/arduino/Print.h",
		"/C/Program Files (x86)/Arduino/hardware/arduino/avr/cores/arduino/Stream.h",
		"/C/Users/gabri/Desktop/interrupterTest/interrupterTest.ino",
		"/C/Users/gabri/Desktop/HbridgeTest/HbridgeTest.ino",
		"/C/Program Files (x86)/Arduino/hardware/arduino/avr/libraries/Wire/src/Wire.h",
		"/D/pulvertech/pulvertech_lite_relay/pulvertech_lite_relay.ino",
		"/C/Users/gabri/Desktop/sketch_aug26a/sketch_aug26a.ino",
		"/D/pulvertech/Main/Main.ino",
		"/C/Users/gabri/Desktop/BOM.json",
		"/C/Users/gabri/Desktop/pulvertech_lite_relay/pulvertech_lite_relay.ino",
		"/C/Users/gabri/Desktop/Marlin/Configuration.h",
		"/D/SW2016_SP2.0_Full-SSQ/_SolidSQUAD_/readme_SW-SSQ.txt",
		"/D/SW2016_SP2.0_Full-SSQ/_SolidSQUAD_.nfo",
		"/C/Users/gabri/Desktop/Marlin/fastio.h",
		"/C/Users/gabri/Desktop/Marlin/Marlin_main.cpp",
		"/C/Users/gabri/Desktop/Marlin/pins.h",
		"/C/Users/gabri/Desktop/Marlin/Marlin.h",
		"/D/pulvertech/Main/calculus.h",
		"/D/pulvertech/Main/control.h",
		"/D/pulvertech/Main/Flux.h",
		"/D/pulvertech/Main/GPS.h",
		"/C/Users/gabri/AppData/Roaming/Sublime Text 3/Packages/User/Stino/app_dir.stino-settings"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"content",
			"pulseCount",
			"testline",
			"flx",
			"float",
			"Out_B",
			"Out_A",
			"history",
			"fluxOld",
			"Min"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"pulseCountSpeed",
			"Spd",
			"double",
			"VALVE_SESSION_PIN2",
			"VALVE_SESSION_PIN",
			"historySpeed",
			"historyFlux"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Users/gabri/Desktop/DataBaseEsp/DataBaseEsp.ino",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1301,
						"regions":
						{
						},
						"selection":
						[
							[
								605,
								605
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/Users/gabri/Desktop/esp8266_deauther-master/esp8266_deauther/esp8266_deauther.ino",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20146,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Program Files (x86)/Arduino/libraries/WiFi/src/WiFiUdp.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3842,
						"regions":
						{
						},
						"selection":
						[
							[
								3740,
								3740
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2044.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/gabri/AppData/Local/Arduino15/packages/esp8266/hardware/esp8266/2.3.0/libraries/ESP8266WiFi/src/WiFiUdp.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4635,
						"regions":
						{
						},
						"selection":
						[
							[
								1044,
								1044
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 228.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Program Files (x86)/Arduino/libraries/WiFi/src/WiFiUdp.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3316,
						"regions":
						{
						},
						"selection":
						[
							[
								933,
								933
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/Program Files (x86)/Arduino/libraries/WiFi/src/utility/wifi_drv.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8501,
						"regions":
						{
						},
						"selection":
						[
							[
								948,
								948
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 83.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.stino_build_panel":
	{
		"height": 447.0
	},
	"output.stino_panel":
	{
		"height": 100.0
	},
	"output.unsaved_changes":
	{
		"height": 213.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 154.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
